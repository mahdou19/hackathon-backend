name: Deploy to Docker Hub and EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18
          cache: npm

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build, tag, and push Docker image to Docker Hub
        env:
          IMAGE_NAME: my-node-app
          IMAGE_TAG: latest
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          NFC_SECRET_KEY: ${{ secrets.NFC_SECRET_KEY }}
          PORT: ${{ secrets.PORT }}
          DB_USER_PASS: ${{ secrets.DB_USER_PASS }}
        run: |
          docker build --build-arg SECRET_KEY --build-arg NFC_SECRET_KEY --build-arg PORT --build-arg DB_USER_PASS -t ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:$IMAGE_TAG .
          docker push ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:$IMAGE_TAG

      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update
          aws --version

      - name: Create PEM file
        run: |
          echo "${{ secrets.EC2_PEM_KEY }}" > /tmp/hackaton.pem
          chmod 600 /tmp/hackaton.pem

      - name: Deploy to EC2
  env:
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    AWS_REGION: ${{ vars.AWS_REGION }}
    DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
    DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    SECRET_KEY: ${{ secrets.SECRET_KEY }}
    NFC_SECRET_KEY: ${{ secrets.NFC_SECRET_KEY }}
    PORT: ${{ secrets.PORT }}
    DB_USER_PASS: ${{ secrets.DB_USER_PASS }}
    EC2_PUBLIC_IP: ${{ vars.EC2_PUBLIC_IP }}
  run: |
    ssh -o StrictHostKeyChecking=no -i /tmp/hackaton.pem ec2-user@${{ vars.EC2_PUBLIC_IP }} << 'EOF'
      sudo yum install docker -y
      sudo service docker start
      sudo usermod -a -G docker ec2-user
      logout
EOF
    ssh -o StrictHostKeyChecking=no -i /tmp/hackaton.pem ec2-user@${{ vars.EC2_PUBLIC_IP }} 'docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD'
    ssh -o StrictHostKeyChecking=no -i /tmp/hackaton.pem ec2-user@${{ vars.EC2_PUBLIC_IP }} 'docker pull $DOCKER_USERNAME/my-node-app:latest'
    ssh -o StrictHostKeyChecking=no -i /tmp/hackaton.pem ec2-user@${{ vars.EC2_PUBLIC_IP }} 'docker stop my-node-app || true && docker rm my-node-app || true'
    ssh -o StrictHostKeyChecking=no -i /tmp/hackaton.pem ec2-user@${{ vars.EC2_PUBLIC_IP }} 'docker run -d -p 3000:3000 --env SECRET_KEY=${{ secrets.SECRET_KEY }} --env NFC_SECRET_KEY=${{ secrets.NFC_SECRET_KEY }} --env PORT=${{ secrets.PORT }} --env DB_USER_PASS=${{ secrets.DB_USER_PASS }} --name my-node-app $DOCKER_USERNAME/my-node-app:latest'